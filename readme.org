* ACT GC Paper Plots
Here I collect the scripts to make all kinds of plots in the act gc
paper.
** planck vs. act temperature map
- script: plot_planck_act_sidebyside.py
- data: planck, coadd
- run script:
  #+BEGIN_SRC bash
  python plot_planck_act_sidebyside.py -o plots --oname planck_coadd_sidebyside.pdf
  #+END_SRC
** QU in 3 bands
- script: plot_qu_in_3bands.py
- data: coadd
- run script:
  #+BEGIN_SRC bash
  python plot_qu_in_3bands.py -o plots
  #+END_SRC
** magnetic field in 3 bands
- script: plot_mag_in_3bands.py
- data: coadd
- run script
  #+BEGIN_SRC bash
  python plot_mag_in_3bands.py -o plots
  #+END_SRC
** polarization fraction
- plot polarization fraction per frequency
- script: plot_polfrac.py
- run script
  #+BEGIN_SRC bash
  python plot_polfrac.py -o plots --freq f090 --oname polfrac_f090.pdf --log
  python plot_polfrac.py -o plots --freq f150 --oname polfrac_f150.pdf --log
  python plot_polfrac.py -o plots --freq f220 --oname polfrac_f220.pdf --log
  #+END_SRC
  smooth version
  #+BEGIN_SRC bash
    python plot_polfrac.py -o plots --freq f090 --oname polfrac_f090_s2.pdf \
           --smooth 2 --cmap jet --min 0 --max 0.2
    python plot_polfrac.py -o plots --freq f150 --oname polfrac_f150_s2.pdf \
           --smooth 2 --cmap jet --min 0 --max 0.2
    python plot_polfrac.py -o plots --freq f220 --oname polfrac_f220_s2.pdf \
           --smooth 2 --cmap jet --min 0 --max 0.2
  #+END_SRC
** polarization uncertainties
- script plot_polangle_error.py
- run script
  #+BEGIN_SRC bash
  python plot_polangle_error.py -o plots --freq f090 --oname polang_err_f090.pdf
  python plot_polangle_error.py -o plots --freq f150 --oname polang_err_f150.pdf
  python plot_polangle_error.py -o plots --freq f220 --oname polang_err_f220.pdf
  #+END_SRC
  fix colormap
  #+BEGIN_SRC bash
    python plot_polangle_error.py -o plots --freq f090 --oname polang_err_f090.pdf \
           --max 20 --cmap gray --smooth 4 --area half
    python plot_polangle_error.py -o plots --freq f150 --oname polang_err_f150.pdf \
           --max 20 --cmap gray --smooth 4 --area half
    python plot_polangle_error.py -o plots --freq f220 --oname polang_err_f220.pdf \
           --max 20 --cmap gray --smooth 4 --area half
  #+END_SRC
** plot magnetic field orientation
- script plot_mag.py
#+BEGIN_SRC bash
  python plot_mag.pyt -o plots --freq f090 --oname mag_f090.pdf \
         --downgrade 4 --underlay plin --cmap binary --min 0 --max 0.2
  python plot_mag.py -o plots --freq f150 --oname mag_f150.pdf \
         --downgrade 4 --underlay plin --cmap binary --min 0 --max 0.2
  python plot_mag.py -o plots --freq f220 --oname mag_f220.pdf \
         --downgrade 4 --underlay plin --cmap binary --min 0 --max 0.1
#+END_SRC
A better visualization: (used in the paper atm)
#+BEGIN_SRC bash
  python plot_mag.py -o plots --freq f090 --oname mag_f090.pdf \
         --downgrade 4 --underlay plog --cmap binary --min -2 --max 0
  python plot_mag.py -o plots --freq f150 --oname mag_f150.pdf \
         --downgrade 4 --underlay plog --cmap binary --min -2 --max 0
  python plot_mag.py -o plots --freq f220 --oname mag_f220.pdf \
         --downgrade 4 --underlay plog --cmap binary --min -2 --max 0
#+END_SRC
** plot one coadd map only
This is to facilitate object identification work
#+BEGIN_SRC bash
python plot_map_1band.py --freq f090 --oname coadd_f090.pdf
python plot_map_1band.py --freq f150 --oname coadd_f150.pdf
python plot_map_1band.py --freq f220 --oname coadd_f220.pdf --max 6
#+END_SRC
** plot mouse object
Mouse is a pulsar travelling at ~300km/s in interstellar medium
creating a cometary feature. This script plots it in different frequency
with the option to substract a dust template using f220.
#+BEGIN_SRC bash
python plot_mouse.py
#+END_SRC
** plot multi-frequency
This uses f090 as red, f150 as green, f220 as blue.
#+BEGIN_SRC bash
python plot_multifreq.py --oname multifreq.pdf -Q 0 -s 1.5
#+END_SRC
color balance
#+BEGIN_SRC bash
  python plot_multifreq.py --oname multifreq_balance.pdf --min 2e8 --max 2e9 \
         --norm 3 -Q 10 -s 2 --area half
#+END_SRC
paper plot
#+BEGIN_SRC bash
  python plot_multifreq.py --oname multifreq.pdf --min 2e8 --max 2e9 \
         --norm 1 -Q 3 -s 3 --area full
#+END_SRC
polarization
#+BEGIN_SRC bash
  python plot_multifreq.py --oname multifreq.pdf --min 2e8 --max 2e9 \
         --norm 1 -Q 3 -s 3 --area full --pol
#+END_SRC
polarization multifrequency with masks
#+BEGIN_SRC bash
  python plot_multifreq.py --oname multifreq_pol_trim.pdf --min 2e7 \
         --max 8e7 --norm 1 -Q 0 -s 3.5 --area trim --pol --smooth 2 --snr 3 --downgrade 4 \
         --mask-method 1 --mask-alpha 0.3
#+END_SRC
a better written script for polarization with mask: plot_multifreq2.py. First, try different
normalization
#+BEGIN_SRC bash
  python plot_multifreq2.py --oname multifreq_pol_trim.pdf --min 1e7 \
         --max 1e9 --norm 3 -Q 0 -s 0.1 --area trim --pol --smooth 3.5 --snr 3 \
         --mask-method 1 --mask-alpha 0.5
#+END_SRC
different normalization (method 2)
#+BEGIN_SRC bash
  python plot_multifreq2.py --oname multifreq_pol_trim.pdf --min 1e7 \
         --max 1e9 --norm 2 -Q 0 -s 3 --area trim --pol --smooth 3.5 --snr 3 \
         --mask-method 1 --mask-alpha 0.5
#+END_SRC
multifreq two panels:
#+BEGIN_SRC bash
    python plot_multifreq.py --oname multifreq.pdf --min 2e8 --max 2e9 \
           --norm 1 -Q 3 -s 3 --area trim --save out/multifreq_I_trim.npy
    python plot_multifreq2.py --oname multifreq_pol_trim.pdf --min 1e7 \
           --max 1e9 --norm 3 -Q 0 -s 0.1 --area trim --pol --smooth 3.5 --snr 3 \
           --mask-method 4 --mask-alpha 0.5 --save out/multifreq_P_trim_median.npy
    python plot_multifreq_2panel.py -T out/multifreq_I_trim.npy \
           -P out/multifreq_P_trim_dust.npy --oname multifreq_2panel.pdf
#+END_SRC
Some more scaling tests
#+BEGIN_SRC bash
  python plot_multifreq2.py --oname multifreq_test.pdf --min 2e8 --max 2e9 \
         --norm 1 -Q 3 -s 3 --area full
#+END_SRC
paper plot 2panel
#+BEGIN_SRC bash
  python plot_multifreq2.py --oname multifreq_trim.pdf --min 2e8 --max 2e9 \
         --norm 1 -Q 3 -s 3 --area trim2 --save out/multifreq_I_trim.npy --snr 3
  python plot_multifreq2.py --oname multifreq_pol_trim.pdf --min 1e7 \
         --max 1e9 --norm 4 -Q 0 -s 0.1 --area trim2 --pol --smooth 3.5 --snr 3 \
         --mask-method 1 --mask-alpha 0.5 --save out/multifreq_P_trim_median.npy
  python plot_multifreq_2panel.py -T out/multifreq_I_trim.npy \
         -P out/multifreq_P_trim_median.npy --oname multifreq_2panel_new.pdf
#+END_SRC
** plot annotation (with multifreq)
#+BEGIN_SRC python
    python plot_multifreq_pag.py --oname multifreq_annot.pdf --min 2e8 --max 2e9 \
           --norm 1 -Q 3 -s 3 --area trim2
#+END_SRC
** plot magnetic field of some region of interests
The mouse object with temperature as underlay
#+BEGIN_SRC bash
  python plot_mag.py -o plots --freq f090 --oname mag_mouse_f090.pdf \
         --underlay T --min 2500 --max 7000 --downgrade 2 --box [[-0.9,-0.65],[-0.7,-0.8]]
#+END_SRC
Around Sag A*
#+BEGIN_SRC bash
  python plot_mag.py -o plots --freq f090 --oname mag_SagA_f090_P.pdf \
         --underlay P --min 0 --max 3e3 --box [[-0.17,0.08],[0.10,-0.20]] --downgrade 1
  python plot_mag.py -o plots --freq f150 --oname mag_SagA_f150_P.pdf \
         --underlay P --min 0 --max 2e3 --box [[-0.17,0.08],[0.10,-0.20]] --downgrade 1
#+END_SRC
** plot multi panel view of tornado object
Around the tornado object: 357.65 -0.08
#+BEGIN_SRC bash
  python plot_region.py -o plots --oname map_tornado.pdf \
         --box "[[-0.25, -2.15],[0.05, -2.45]]" --dust-removal \
         --tmax 7000,5000 --pmax 500,300
#+END_SRC
** plot radio arc magnetic field orientation
TBD
** plot spectral indices
ratio of f090 and f150, and the resulting spectral index is compared to
a fiducial index of synchrotron radiation beta = -3.1
#+BEGIN_SRC bash
python plot_spectral_indices.py --cmap magma --freq f090 --oname spec_sync.pdf --area trim
python plot_spectral_indices.py --cmap magma --freq f150 --oname spec_dust.pdf --area trim
#+END_SRC
this plots the spectral index instead of its different with synchtrotron
#+BEGIN_SRC bash
python plot_spectral_indices2.py --area dust1 --cmap magma --freq f150
#+END_SRC
two panel plots up (f090/f150) and down (f150/f220), (used in the paper)
#+BEGIN_SRC bash
  python plot_spectral_indices_2panel.py --cmap magma --oname spec_2panel.pdf \
         --area trim --figsize "(8,4)" --beam-match
#+END_SRC
** plot signal to noise
#+BEGIN_SRC bash
python plot_snr.py --area full --min 3 --max 50
python plot_snr.py --area full --min 0 --max 6 --pol
#+END_SRC
save mask (after smoothing with fwhm=2')
#+BEGIN_SRC
python plot_snr.py --area full --min 0 --max 100 --smooth 2 --save out
python plot_snr.py --area full --min 0 --max 6 --smooth 2 --pol --save out
#+END_SRC
** plot planck ivar map for debug
comp 0,1,2 -> T,Q,U
#+BEGIN_SRC bash
python plot_ivar.py --comp 0
python plot_ivar.py --comp 1
python plot_ivar.py --comp 2
#+END_SRC
It shows that planck's noise model sill has the werid patterns seen in
2018 releases
** plot snr masks
#+BEGIN_SRC bash
enplot out/snr_{f090,f150,f220}{,_pol}.fits --odir plots
#+END_SRC
** plot spectrum of a given pixel
#+BEGIN_SRC bash
  python plot_pixel_spectra.py -l -3 -b "np.linspace(-1.5,1.5,100)" \
         --oname pix_spec_m3.pdf --color y --use planck \
         --title "l=-3 b=linspace(-1.5,1.5,100)" --cmap magma
#+END_SRC
** plot source
#+BEGIN_SRC bash
  python plot_source.py -o plots --oname source_snr_1903.pdf -l 1.87550 \
         -b 0.32423 --dust-removal --tmin 0,0 --tmax 0.5,0.5 --pmax 0.03,0.06 \
         --dust-factor-f090 1.6 --dust-factor-f150 0.6
#+END_SRC

#+BEGIN_SRC bash
  python plot_source.py -o plots --oname source_snr_0901.pdf -l 0.85 -b 0.075 \
         --dust-removal --tmin 0,0 --tmax 4,2 --pmax 0.02,0.1 \
         --dust-factor-f090 1.65 --dust-factor-f150 0.5
#+END_SRC
